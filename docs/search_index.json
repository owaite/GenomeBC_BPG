[["index.html", "Guidelines and Procedures for Drone Based Phenotyping in Forest Research Trials Guidelines and Procedures for Drone Based Phenotyping in Forest Research Trials GitHub link Acknowledgements How to cite this report:", " Guidelines and Procedures for Drone Based Phenotyping in Forest Research Trials Jake King*, Olivia Waite, Miriam Isaac-Renton, Nicholas C. Coops, Samuel Grubinger, Liam Irwin, Lise Van Der Merwe, Jon Degner, Alex Liu 2024-07-07 Guidelines and Procedures for Drone Based Phenotyping in Forest Research Trials GitHub link Below is the link to the GitHub where you can access full scripts referenced in this document GitHub Link: Acknowledgements These guidelines were made possible thanks for project funding from Genome British Columbia’s GeneSolve program, the Canadian Forest Service’s Fibre Solutions, 2 Billion Tree programs, and Assistant Deputy Minister’s Innovation Fund. For administrative assistance, we thank Adam Dick, Olivier van Lier, Marlene Francis, Annick Pelletier, Lise Carron, Guy Smith and Amélie Roberge. For practical input, we thank Bill Lakeland, Alec Wilson, Eric Saczuk, Keenan Rudichuk and David Huntley. How to cite this report: "],["glossary.html", "Glossary", " Glossary "],["contents.html", "Contents", " Contents "],["background-and-basis-of-knowledge.html", "Chapter 1 Background and basis of knowledge", " Chapter 1 Background and basis of knowledge "],["standard-operating-procedures-for-dji-m300-mapping-flights.html", "Chapter 2 Standard Operating Procedures for DJI M300 Mapping Flights", " Chapter 2 Standard Operating Procedures for DJI M300 Mapping Flights Overview: This is for DJI M300 mapping flights above forestry research trials and does not extend to flying within 30m of bystanders or over buildings. All relevant Transport Canada drone regulations will be adhered to. Emergency procedures: "],["overview-of-methodologies.html", "Chapter 3 Overview of Methodologies", " Chapter 3 Overview of Methodologies "],["range-of-sites-assessed.html", "Chapter 4 Range of Sites Assessed", " Chapter 4 Range of Sites Assessed "],["preflight-planning.html", "Chapter 5 Preflight Planning 5.1 Aligning and registering data from different time points and sensors 5.2 Site Selection Considerations", " Chapter 5 Preflight Planning hello 5.1 Aligning and registering data from different time points and sensors hello 5.1.1 Kinematic processing: RTK/PPK hello 5.1.2 Ground Control Points (GCPs) hello 5.1.3 Absolute and Relative Reference with Precise Point Positioning hello 5.1.4 Terrain Following on Sites with Elevation Gain hello 5.2 Site Selection Considerations hello "],["lidar-processing-workflow.html", "Chapter 6 LiDAR Processing Workflow 6.1 DJI Terra 6.2 Run the raw ########### files in DJI Terra using the below settings: 6.3 Register the LiDAR to the DAP point cloud", " Chapter 6 LiDAR Processing Workflow 6.1 DJI Terra Input: 6.2 Run the raw ########### files in DJI Terra using the below settings: large bullet sub bullet Output: 6.3 Register the LiDAR to the DAP point cloud Given we were flying biweekly multispectral and RGB imagery and only 2-3 LiDAR aquisitions a year, we organized our workflow so that the LiDAR is aligned to the DAP. This allowed us to more easily align the many multispectral and RGB acquisitions to a defined template in Agisoft Metashape. 6.3.1 Prepare LiDAR for registration Below are snipets of a script written in LAStools that is used to ensure the LiDAR and DAP clouds are in the proper proection, filters out points in the LiDAR that are above a defined threshold, and clips the LiDAR to a boudnary polygon to speed up registration by avoiding working with excess data in CloudCompare. The unparsed script can be found on the project GitHub, see ?? Ensures both the DAP point cloud and LiDAR file are in the proper projection (NAD83 UTM 10N in our case) path_to_L1_las is the path to the LiDAR .las file from DJI terra. path_to_write is where the path the projected .laz file will be written to. The files will be saved out with the same file name as the origianl LiDAR file with a “_nad83” suffix. “REM” works to comment out a line in LAStools as “#” does in R REM Project DAP and save out as a .laz las2las -i path_to_DAP_las_file ^ -odir path_to_write ^ -odix _nad83 ^ -olaz ^ -nad83 ^ -utm 10north ^ -cpu64 ^ -v REM Project LiDAR and save out as a .laz las2las -i path_to_L1_las ^ -odir path_to_write ^ -odix _nad83 ^ -olaz ^ -nad83 ^ -utm 10north ^ -cpu64 ^ -v Drops points in the LiDAR file above a threshold to remove noisy points that are not from the canopy. To determine this height threshold, we recommend visualizing the las files in Potree. Lastly we clip the LiDAR file to a boundary polygon of the site to remove excess surrounding data that can slow processing in CloudCompare. 6.3.2 Register LiDAR to DAP cloud in CloudCompare Import both the LiDAR and DAP clouds into Cloud Compare (CC). This can take up to twenty minutes. Allow all for the first two warnings. 6.3.2.1 Examine the point clouds for artifacts. The L1 will reflect flight lines when there is moisture in the air. Below is an example point cloud from a damp day on the coast just after a fog past through. For sake of the example, it was not filtered in LAStools with a height threshold. The residual fog patches seen above the canopy can be clipped out using the cross section or segment tool. ** IMAGE of TOOLS MENTIONED ** ****************************************** 6.3.2.2 Rough Alignment The goal is to roughly align (move) the LiDAR to our reference “template” DAP dense cloud ahead of the ICP fine adjustment algorithm. Problem: Manually moving the LiDAR cloud to roughly align with the DAP cloud caused Cloud Compare to crash or hang when working with larger data sets. Solution: Use the Apply Transformation function in Cloud Compare – Highlight the LiDAR layer in the DB tree - Hit ctrl T or Apply Transformation in the Edit menu. In this example the LiDAR is the lower. First apply a z transformation. It is best to do this while viewing the edge of the plot. I applied 6 to the Z. Next Apply transformations in the x and y axis. Find a section of the clouds where you can easily see the alignment. In this case there is a single large leave tree in the centre of the plot. The LiDAR is the one on the left. Here I see the LiDAR is offset to the left (negative) on the Y(green) axis and up (positive) on the x(red) axis. Be careful not to rotate, only transform. In this case I shifted the ALS -5 in the X and +5 in the Y axis. It took Three smaller iterations to get to this point. 6.3.2.3 Fine Registration: Iterative Closest Point (ICP) Highlight both clouds in the DB tree and apply the fine registration (ICP) algorithm using the following settings. Careful to set a max thread count that matches the resources you have available. 6.3.3 Rescale and tile the registered LiDAR: Below is a script written in LAStools that: - Ensures the data is still in the proper projection (NAD83 UTM 10N). - Rescales the data which is necessary to later load into R for normalization and metric calculations. - Lastly the code tiles the LiDAR to allow for parallel processing in the following R steps. 6.3.4 Normalization and individual tree metric calculations: Below is an R script that: Creates a 10cm DTM from the tiles Normalizes the tiles using the DTM Creates a 4cm CHM from the max Z values in each pixel Segments the tiles to only retain the top 25% of each tree using the crown polygons. Threshold can change dependent on study needs, 25% was set given the trees were mature with crown closure Merges segmented tiles to create one large las file containing the top 25% of each tree Clips las file to an individual point cloud containing the top 25% of point per tree using the crown polygons Calculates metrics on indiviual tree point clouds: Height percentiles: 99, 97.5, 95, 92.5, mean height Volumes: Convex, concave, volume from an alpha shape of 0.5 Crown complexity: rumple, canopy rugosity ratio, coefficient of variation of height . "]]
